                                      1 ;basic light
                                      2 #include "const.h"
                                       ===== basic_light.vsh -> const.h =====
                                      1 #define CLIP_MATRIX 0
                                      2 #define CLIP_MATRIX_1 1
                                      3 #define CLIP_MATRIX_2 2
                                      4 #define CLIP_MATRIX_3 3
                                      5 #define INVERSE_WORLD_MATRIX 4
                                      6 #define INVERSE_WORLD_MATRIX_1 5
                                      7 #define INVERSE_WORLD_MATRIX_2 6
                                      8 #define LIGHT_POSITION 11
                                      9 #define DIFFUSE_COLOR 14
                                      10 #define LIGHT_COLOR 15
                                       ===== const.h -> basic_light.vsh =====
                                      3 
                                      4 vs.1.1
                                      5 ;transpose and transform to clip space
00000000: 00000005 800f0000 90000000  6 mul r0, v0.x, c[CLIP_MATRIX]
          a0e40000
00000010: 00000004 800f0000 90550000  7 mad r0, v0.y, c[CLIP_MATRIX_1], r0
          a0e40001 80e40000
00000024: 00000004 800f0000 90aa0000  8 mad r0, v0.z, c[CLIP_MATRIX_2], r0
          a0e40002 80e40000
00000038: 00000002 c00f0000 a0e40003  9 add oPos, c[CLIP_MATRIX_3], r0
          80e40000
                                      10 ;transform normal
00000048: 00000008 80010001 90e40003  11 dp3 r1.x, v3, c[INVERSE_WORLD_MATRIX]
          a0e40004
00000058: 00000008 80020001 90e40003  12 dp3 r1.y, v3, c[INVERSE_WORLD_MATRIX_1]
          a0e40005
00000068: 00000008 80040001 90e40003  13 dp3 r1.z, v3, c[INVERSE_WORLD_MATRIX_2]
          a0e40006
                                      14 ;renormalize it
00000078: 00000008 80080001 80e40001  15 dp3 r1.w, r1, r1
          80e40001
00000088: 00000007 80080001 80ff0001  16 rsq r1.w, r1.w
00000094: 00000005 800f0001 80e40001  17 mul r1, r1, r1.w
          80ff0001
                                      18 ;N dot L
                                      19 ;we need L verctor towards the light, thus negate sign
000000a4: 00000008 800f0000 80e40001  20 dp3 r0, r1, -c[LIGHT_POSITION]
          a1e4000b
000000b4: 00000005 800f0000 80e40000  21 mul r0, r0, c[LIGHT_COLOR]
          a0e4000f
000000c4: 00000005 d00f0000 80e40000  22 mul oD0, r0, c[DIFFUSE_COLOR]
          a0e4000e
